// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travelingyu.Data;

namespace Travelingyu.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220202122416_User")]
    partial class User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Travelingyu.Models.Bus", b =>
                {
                    b.Property<string>("KodeBus")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Dari")
                        .HasColumnType("text");

                    b.Property<int>("Harga")
                        .HasColumnType("int");

                    b.Property<string>("Ke")
                        .HasColumnType("text");

                    b.Property<string>("NamaSup")
                        .HasColumnType("text");

                    b.HasKey("KodeBus");

                    b.ToTable("Tb_Bus");
                });

            modelBuilder.Entity("Travelingyu.Models.Kelas", b =>
                {
                    b.Property<string>("NamaKelas")
                        .HasColumnType("varchar(767)");

                    b.Property<bool>("Chathring")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Harga")
                        .HasColumnType("int");

                    b.HasKey("NamaKelas");

                    b.ToTable("Tb_Kelas");
                });

            modelBuilder.Entity("Travelingyu.Models.Kereta", b =>
                {
                    b.Property<string>("IdKereta")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Dari")
                        .HasColumnType("text");

                    b.Property<int>("Harga")
                        .HasColumnType("int");

                    b.Property<string>("Ke")
                        .HasColumnType("text");

                    b.Property<string>("NamaKereta")
                        .HasColumnType("text");

                    b.Property<string>("Tiba")
                        .HasColumnType("text");

                    b.HasKey("IdKereta");

                    b.ToTable("Tb_Kereta");
                });

            modelBuilder.Entity("Travelingyu.Models.Maskapai", b =>
                {
                    b.Property<string>("IdMaskapai")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("NamaMaskapai")
                        .HasColumnType("text");

                    b.HasKey("IdMaskapai");

                    b.ToTable("Tb_Maskapai");
                });

            modelBuilder.Entity("Travelingyu.Models.Pelanggan", b =>
                {
                    b.Property<string>("KodePelanggan")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DaerahAsal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaPelanggan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorKtp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorTelpon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("KodePelanggan");

                    b.ToTable("Tb_Pelanggan");
                });

            modelBuilder.Entity("Travelingyu.Models.Pemesanan", b =>
                {
                    b.Property<string>("KodeTiket")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("KodePelanggan1")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("MaskapaiIdMaskapai")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("NamaKelas1")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("PesawatKodePesawat")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("WaktuKeberangkatan")
                        .HasColumnType("datetime");

                    b.HasKey("KodeTiket");

                    b.HasIndex("KodePelanggan1");

                    b.HasIndex("MaskapaiIdMaskapai");

                    b.HasIndex("NamaKelas1");

                    b.HasIndex("PesawatKodePesawat");

                    b.ToTable("Tb_TransaksiPesawat");
                });

            modelBuilder.Entity("Travelingyu.Models.Pesawat", b =>
                {
                    b.Property<string>("KodePesawat")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Dari")
                        .HasColumnType("text");

                    b.Property<string>("Ke")
                        .HasColumnType("text");

                    b.Property<int>("Kursi")
                        .HasColumnType("int");

                    b.Property<string>("MaskapaiIdMaskapai")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.HasKey("KodePesawat");

                    b.HasIndex("MaskapaiIdMaskapai");

                    b.ToTable("Tb_Pesawat");
                });

            modelBuilder.Entity("Travelingyu.Models.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Roles");
                });

            modelBuilder.Entity("Travelingyu.Models.Tiket", b =>
                {
                    b.Property<string>("IdTiket")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("KelasNamaKelas")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("KeretaIdKereta")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("KodeKodePelangganKodePelanggan")
                        .HasColumnType("varchar(767)");

                    b.HasKey("IdTiket");

                    b.HasIndex("KelasNamaKelas");

                    b.HasIndex("KeretaIdKereta");

                    b.HasIndex("KodeKodePelangganKodePelanggan");

                    b.ToTable("Tb_TransaksiKereta");
                });

            modelBuilder.Entity("Travelingyu.Models.TransaksiBus", b =>
                {
                    b.Property<string>("IdTr")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("BusKodeBus")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("IdPelangganKodePelanggan")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("TanggalBerangkat")
                        .HasColumnType("datetime");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.HasKey("IdTr");

                    b.HasIndex("BusKodeBus");

                    b.HasIndex("IdPelangganKodePelanggan");

                    b.ToTable("TransaksiBuss");
                });

            modelBuilder.Entity("Travelingyu.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("RolesId");

                    b.ToTable("Tb_User");
                });

            modelBuilder.Entity("Travelingyu.Models.Pemesanan", b =>
                {
                    b.HasOne("Travelingyu.Models.Pelanggan", "KodePelanggan")
                        .WithMany()
                        .HasForeignKey("KodePelanggan1");

                    b.HasOne("Travelingyu.Models.Maskapai", "Maskapai")
                        .WithMany()
                        .HasForeignKey("MaskapaiIdMaskapai");

                    b.HasOne("Travelingyu.Models.Kelas", "NamaKelas")
                        .WithMany()
                        .HasForeignKey("NamaKelas1");

                    b.HasOne("Travelingyu.Models.Pesawat", "Pesawat")
                        .WithMany()
                        .HasForeignKey("PesawatKodePesawat");

                    b.Navigation("KodePelanggan");

                    b.Navigation("Maskapai");

                    b.Navigation("NamaKelas");

                    b.Navigation("Pesawat");
                });

            modelBuilder.Entity("Travelingyu.Models.Pesawat", b =>
                {
                    b.HasOne("Travelingyu.Models.Maskapai", "Maskapai")
                        .WithMany()
                        .HasForeignKey("MaskapaiIdMaskapai");

                    b.Navigation("Maskapai");
                });

            modelBuilder.Entity("Travelingyu.Models.Tiket", b =>
                {
                    b.HasOne("Travelingyu.Models.Kelas", "Kelas")
                        .WithMany()
                        .HasForeignKey("KelasNamaKelas");

                    b.HasOne("Travelingyu.Models.Kereta", "Kereta")
                        .WithMany()
                        .HasForeignKey("KeretaIdKereta");

                    b.HasOne("Travelingyu.Models.Pelanggan", "KodeKodePelanggan")
                        .WithMany()
                        .HasForeignKey("KodeKodePelangganKodePelanggan");

                    b.Navigation("Kelas");

                    b.Navigation("Kereta");

                    b.Navigation("KodeKodePelanggan");
                });

            modelBuilder.Entity("Travelingyu.Models.TransaksiBus", b =>
                {
                    b.HasOne("Travelingyu.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusKodeBus");

                    b.HasOne("Travelingyu.Models.Pelanggan", "IdPelanggan")
                        .WithMany()
                        .HasForeignKey("IdPelangganKodePelanggan");

                    b.Navigation("Bus");

                    b.Navigation("IdPelanggan");
                });

            modelBuilder.Entity("Travelingyu.Models.User", b =>
                {
                    b.HasOne("Travelingyu.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
